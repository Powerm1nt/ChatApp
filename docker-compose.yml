version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-chat-app}-postgres
    environment:
      - POSTGRES_DB=${DB_NAME:-chatapp}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service for production
  backend:
    build:
      context: ./backend
      target: production
    container_name: ${COMPOSE_PROJECT_NAME:-chat-app}-backend-prod
    ports:
      - "${BACKEND_PORT:-3001}:${BACKEND_PORT:-3001}"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - PORT=${BACKEND_PORT:-3001}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-chatapp}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    networks:
      - chat-app-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-3001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service for production
  frontend:
    build:
      context: ./frontend
      target: production
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_SOCKET_URL=${VITE_SOCKET_URL}
    container_name: ${COMPOSE_PROJECT_NAME:-chat-app}-frontend-prod
    ports:
      - "80:80"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    networks:
      - chat-app-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  chat-app-network:
    driver: bridge
