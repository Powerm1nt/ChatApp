services:
  # PostgreSQL Database for development
  postgres:
    image: postgres:17-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-chat-app}-postgres-dev
    environment:
      - POSTGRES_DB=${DB_NAME:-chatapp}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - chat-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      target: dev
    container_name: ${COMPOSE_PROJECT_NAME:-chat-app}-backend-dev
    ports:
      - "${BACKEND_PORT:-3001}:${BACKEND_PORT:-3001}"
    volumes:
      - ./backend:/app
      - ./backend/node_modules:/app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${BACKEND_PORT:-3001}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-chatapp}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    networks:
      - chat-app-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    # Enable debugging
    command: yarn start:debug

  frontend:
    build:
      context: ./frontend
      target: dev
    container_name: ${COMPOSE_PROJECT_NAME:-chat-app}-frontend-dev
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL}
      - VITE_SOCKET_URL=${VITE_SOCKET_URL}
    networks:
      - chat-app-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  chat-app-network:
    driver: bridge
